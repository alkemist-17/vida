
// Graphics
loc box = "‚òê"
loc check = "‚úÖ"
loc uncheck = "‚ùå"
loc thinking = "ü§î"


// Data
loc state = enum {
    todo
    done
    maybe
    error
}

loc getBullet = fun state {
    if state == state.todo {
        ret box
    }
    if state == state.done {
        ret check
    }
    if state == state.maybe {
        ret thinking
    }
    ret uncheck
}

loc item = { text, state }

item.description = fun self, pos {
    loc bullet = getBullet(self.state)
    ret format("  %3v  %2v  %v", pos, bullet, self.text)
}


loc printList = fun xs {
    print("\n\n\n\nSuggestions for Vida Enhancement\n\n\n")

    for k, v in xs {
        print(format("  %3v  %2v  %v", k + 1, box, v))
    }

    print("\n\n\n")
}

loc suggestionsList = [
    "Optional commas in fun defs and fun calls"
    "Analysis of code generation looking for optimization opportunities"
    "save compiled artefacts (serialization)"
    "Think concepts like module, lib, packages"
    "Bytes and String buffer values"
    "A '**' power binary op"
    "Create a libray for basic testing"
    "Metaprogramming"
    "Thinking Functional (Lambda)"
    "A cooperative multitasking model of concurrency"
]

printList(suggestionsList)

