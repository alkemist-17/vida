
// Graphics
loc box = "‚òê"
loc check = "‚úÖ"
loc uncheck = "‚ùå"
loc thinking = "ü§î"


// Data
loc state = enum {
    todo
    done
    maybe
    error
}

loc getBullet = fn state {
    if state == state.todo {
        ret box
    }
    if state == state.done {
        ret check
    }
    if state == state.maybe {
        ret thinking
    }
    ret uncheck
}

loc item = { text, state }

item.description = fn self, pos {
    loc bullet = getBullet(self.state)
    ret format("  %3v  %2v  %v", pos, bullet, self.text)
}


loc printList = fn xs {
    print("\n\n\n\nSuggestions for Vida Enhancement\n\n\n")

    for k, v in xs {
        print(format("  %3v  %2v  %v", k + 1, box, v))
    }

    print("\n\n\n")
}

loc suggestionsList = [
    "A time lib",
    "A regex lib",
    "A path lib",
    "Analysis of code generation looking for optimization opportunities",
    "Binary serialization of values",
    "Bytes and String buffer values",
    "The object core library",
    "Organize corelib",
    "An 'in' member checking binary op",
    "A '**' power binary op",
    "Creating a testing libray MVP"
    "Metaprogramming"
    "Thinking Functional (Lambda)"
    "Iterator helpers like foreach, every, some, all, none, exist"
    "Make objects and lists toggle between mutable and immutable ones."
]

printList(suggestionsList)

