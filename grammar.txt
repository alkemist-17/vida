module		:=	statement*
statement	:= 	global
			| 	local
			|	datamut
			|	block
global		:=	ident '=' expr
local		:=	'loc' ident '=' expr
datamut		:=	ident select select* '=' expr
block		:=	statement*
ident		:=	['_' | letter]+ ['_' | letter | number]*
expr		:=	prefix
			|	binary
prefix		:=	'!' | '+' | '-' prefix
			|	primary select*
binary		:=	expr binop expr
primary		:=	'true'
			|	'false'
			|	'nil'
			|	ident
			|	'(' expr ')'
			|	Integer
			|	Float
			|	String
			|	List
			|	Document
binop		:=	'and'
			|	'or'
			|	'+'
			|	'-'
			|	'*'
			|	'/'
			|	'%'
			|	'<'
			|	'<='
			|	'>'
			|	'>='
			|	'=='
			|	'!='
List		:=	'[' (expr (',' expr)*)? ']'
Document	:=	'{' (pair (',' pair))* '}'
pair		:=	ident ':' expr
select		:=	'[' expr | ':' | ':' expr | expr ':' | expr ':' expr ']' select*
			|	'.' ident select*
			|	'(' (expr (',' expr)*)? ')' select*
			|	':' ident '(' (expr (',' expr)*)? ')' select*
