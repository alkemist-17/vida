
let a = 100
let b = 200

let globalGlobal = fun {
    assert(a+b == 300)
    assert(a-b == -100)
    assert(a*b == 20000)
    assert(a/b == 0)
    assert(a%b == 100)

    assert(b+a == 300)
    assert(b-a == 100)
    assert(b*a == 20000)
    assert(b/a == 2)
    assert(b%a == 0)
    assert(not (a==b))
    assert(a!=b)
    assert(not (b==a))
    assert(b!=a)
}

let globalLocal = fun b {
    assert(a+b == 300)
    assert(a-b == -100)
    assert(a*b == 20000)
    assert(a/b == 0)
    assert(a%b == 100)

    assert(b+a == 300)
    assert(b-a == 100)
    assert(b*a == 20000)
    assert(b/a == 2)
    assert(b%a == 0)
    assert(not (a==b))
    assert(a!=b)
    assert(not (b==a))
    assert(b!=a)
}

let globalKonst = fun {
    assert(a+200 == 300)
    assert(a-200 == -100)
    assert(a*200 == 20000)
    assert(a/200 == 0)
    assert(a%200 == 100)

    assert(200+a == 300)
    assert(200-a == 100)
    assert(200*a == 20000)
    assert(200/a == 2)
    assert(200%a == 0)
    assert(not (a==200))
    assert(a!=200)
    assert(not (200==a))
    assert(200!=a)
}

let localLocal = fun a, b {
    assert(a+b == 300)
    assert(a-b == -100)
    assert(a*b == 20000)
    assert(a/b == 0)
    assert(a%b == 100)

    assert(b+a == 300)
    assert(b-a == 100)
    assert(b*a == 20000)
    assert(b/a == 2)
    assert(b%a == 0)
    assert(not (a==b))
    assert(a!=b)
    assert(not (b==a))
    assert(b!=a)
}

let globalFree = fun b {
    ret fun {
        assert(a+b == 300)
        assert(a-b == -100)
        assert(a*b == 20000)
        assert(a/b == 0)
        assert(a%b == 100)

        assert(b+a == 300)
        assert(b-a == 100)
        assert(b*a == 20000)
        assert(b/a == 2)
        assert(b%a == 0)
        assert(not (a==b))
        assert(a!=b)
        assert(not (b==a))
        assert(b!=a)
    }
}

let localKonst = fun a {
    assert(a+200 == 300)
    assert(a-200 == -100)
    assert(a*200 == 20000)
    assert(a/200 == 0)
    assert(a%200 == 100)

    assert(200+a == 300)
    assert(200-a == 100)
    assert(200*a == 20000)
    assert(200/a == 2)
    assert(200%a == 0)
    assert(not (a==200))
    assert(a!=200)
    assert(not (200==a))
    assert(200!=a)
}

let localFree = fun b {
    ret fun a {
        assert(a+b == 300)
        assert(a-b == -100)
        assert(a*b == 20000)
        assert(a/b == 0)
        assert(a%b == 100)

        assert(b+a == 300)
        assert(b-a == 100)
        assert(b*a == 20000)
        assert(b/a == 2)
        assert(b%a == 0)
        assert(not (a==b))
        assert(a!=b)
        assert(not (b==a))
        assert(b!=a)
    }
}

let konstKonst = fun {
    assert(100+200 == 300)
    assert(100-200 == -100)
    assert(100*200 == 20000)
    assert(100/200 == 0)
    assert(100%200 == 100)

    assert(200+100 == 300)
    assert(200-100 == 100)
    assert(200*100 == 20000)
    assert(200/100 == 2)
    assert(200%100 == 0)
    assert(not (100==200))
    assert(100!=200)
}

let konstFree = fun b {
    ret fun {
        assert(100+b == 300)
        assert(100-b == -100)
        assert(100*b == 20000)
        assert(100/b == 0)
        assert(100%b == 100)

        assert(b+100 == 300)
        assert(b-100 == 100)
        assert(b*100 == 20000)
        assert(b/100 == 2)
        assert(b%100 == 0)
        assert(not (100==b))
        assert(100!=b)
        assert(not (b==100))
        assert(b!=100)
    }
}

let freeFree = fun a, b {
    ret fun {
        assert(a+b == 300)
        assert(a-b == -100)
        assert(a*b == 20000)
        assert(a/b == 0)
        assert(a%b == 100)

        assert(b+a == 300)
        assert(b-a == 100)
        assert(b*a == 20000)
        assert(b/a == 2)
        assert(b%a == 0)
        assert(not (a==b))
        assert(a!=b)
        assert(not (b==a))
        assert(b!=a)
    }
}

globalGlobal()
globalLocal(b)
globalKonst()
globalFree(b)()
localLocal(a, b)
localKonst(a)
localFree(b)(a)
konstKonst()
konstFree(b)()
freeFree(a, b)()

loc a = 100
loc b = 200

assert(a+b == 300)
assert(a-b == -100)
assert(a*b == 20000)
assert(a/b == 0)
assert(a%b == 100)

assert(b+a == 300)
assert(b-a == 100)
assert(b*a == 20000)
assert(b/a == 2)
assert(b%a == 0)

